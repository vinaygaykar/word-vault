plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'io.github.gradle-nexus.publish-plugin' version '1.3.0'
}

group 'io.github.vinaygaykar'
version '0.1.0-ALPHA'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

java {
    withJavadocJar()
    withSourcesJar()

    toolchain {
        languageVersion.set(JavaLanguageVersion.of(8))
    }
}

test {
    useJUnitPlatform()
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Word Vault'
                description = 'A key-value store for Strings'
                url = 'https://github.com/vinaygaykar/word-vault.git'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'vinaygaykar'
                        name = 'Vinay Gaykar'
                        email = 'vinay.gaykar@proton.me'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/vinaygaykar/word-vault.git'
                    developerConnection = 'scm:git:ssh://github.com/vinaygaykar/word-vault.git'
                    url = 'https://github.com/vinaygaykar/word-vault.git'
                }
            }
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("$sonatypeReleaseURL"))
            snapshotRepositoryUrl.set(uri("$sonatypeSnapshotURL"))
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
